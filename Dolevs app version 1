<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.3/dist/tailwind.min.css" rel="stylesheet">
    <title>Vocabulary Trainer By Dolev .T.</title>
    <style>
        .slow-fade-out {
            transition: opacity 1s;
            opacity: 0;
        }
    </style>
</head>

<body class="bg-gray-100 min-h-screen">
    <div id="app" class="container mx-auto p-4">
        <div class="mb-4">
            <input type="text" id="listName" class="border-2 border-gray-300 rounded px-2 mr-2" placeholder="Word List name">
            <button id="saveButton" class="bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded" onclick="saveList();">Save</button>
            <button id="resetButton" class="bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded" onclick="resetCount();">Reset Count</button>
            <button id="loadButton" class="bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded" onclick="loadList();">Load</button>
            <button id="deleteButton" class="bg-red-500 hover:bg-red-600 text-white py-2 px-4 rounded" onclick="deleteList();">Delete</button>
            <div id="savedLists" class="mt-2"></div>
        </div>
        <div class="mb-4">
            <textarea id="wordList" class="w-full h-64 border-2 border-gray-300 rounded p-2" placeholder="Enter your list here in this format:&#10 1.example &#10 2.example ..."></textarea>
        </div>
        <div>
            <button id="playButton" class="bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded" onclick="startPlay();">Play</button>
        </div>
        <div class="mt-4">
            <label for="timer" class="text-lg">Word Switch time (Default: 1 Second): </label>
            <input type="number" id="minutes" placeholder="minutes" min="0" class="border-2 border-gray-300 px-2 mr-2">
            <input type="number" id="seconds" placeholder="seconds" min="1" class="border-2 border-gray-300 px-2">
        </div>
        <div class="mt-4">
         <label for="sound" class="text-lg"><a href="https://mixkit.co/free-sound-effects/" target="_blank">Alert Tone For Word Swap</a>: </label>
<input type="file" id="sound" class="border-2 border-gray-300 px-2" accept="audio/*">
<audio id="defaultSound" src="https://freesound.org/data/previews/495/495895_8830646-lq.mp3"></audio>

        </div>
       <h2 class="text-xl mt-6 mb-3">
    <a href="https://www.youtube.com/watch?v=a3Z7zEc7AXQ" target="_blank" rel="noopener noreferrer">Legendary Vocabulary Trainer Made By Dolev.T ‚ù§</a>
</h2>

        <p id="currentWord" class="text-2xl text-gray-700"></p>
    </div>
    <div id="stopScreen" class="hidden bg-white min-h-screen flex items-center justify-center flex-col">
        <p id="currentWordCenter" class="text-2xl text-gray-700 mb-6"></p>
        <div class="flex">
            <button id="backButton" class="bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded mr-2" onclick="goBack();">Back</button>
            <button id="stopButton" class="bg-red-500 hover:bg-red-600 text-white py-2 px-4 rounded" onclick="stopPlay();">Stop</button>
            <button id="nextButton" class="bg-gray-500 hover:bg-gray-600 text-white py-2 px-4 rounded ml-2" onclick="goNext();">Next</button>
        </div>
    </div>
    <script>
        let wordIndex = 0;
        let wordList = [];
        let playing = false;
        let intervalId;
        let soundFile;
        let defaultSound = document.getElementById("defaultSound");

        const startPlay = () => {
            const list = document.getElementById("wordList").value;
            wordList = list.split(/\n(?=\d+\.)/).map(word => word.replace(/^\d+\.\s*/, '')).filter(word => word.trim() !== '');

            if (wordList.length === 0) {
                alert("Please enter a valid list.");
                return;
            }
            playing = true;
            document.getElementById("app").classList.add("slow-fade-out");
            setTimeout(() => {
                document.getElementById("app").classList.add("hidden");
                document.getElementById("stopScreen").classList.remove("hidden");
            }, 1000);
            updateWord();
            let minutes = parseInt(document.getElementById("minutes").value) || 0;
            let seconds = parseInt(document.getElementById("seconds").value) || 1;
            intervalId = setInterval(() => {
                updateWord();
            }, (minutes * 60 + seconds) * 1000);

            const currentListName = document.getElementById("listName").value || 'default';
            localStorage.setItem('wordIndex-' + currentListName, wordIndex);
        };

        const stopPlay = () => {
            playing = false;
            clearInterval(intervalId);
            document.getElementById("stopScreen").classList.add("hidden");
            document.getElementById("app").classList.remove("slow-fade-out");
            document.getElementById("app").classList.remove("hidden");

            const currentListName = document.getElementById("listName").value || 'default';
            localStorage.setItem('wordIndex-' + currentListName, wordIndex);
        };

        const updateWord = () => {
            let currentWordText = wordIndex + 1 + '. ' + wordList[wordIndex].trim();
            document.getElementById("currentWordCenter").innerText = currentWordText;
            wordIndex++;
            if (wordIndex >= wordList.length) {
                wordIndex = 0;
            }
            playSound();
        };

        const goNext = () => {
            updateWord();
        };

        const goBack = () => {
            wordIndex -= 2;
            if (wordIndex < 0) {
                wordIndex = wordList.length - 1;
            }
            updateWord();
        };

        const playSound = () => {
            soundFile = document.getElementById("sound").files[0];
            if (soundFile) {
                let reader = new FileReader();
                reader.onload = (e) => {
                    let audio = new Audio(e.target.result);
                    audio.play();
                };
                reader.readAsDataURL(soundFile);
            } else {
                defaultSound.play();
            }
        };

        const saveList = () => {
            const listName = document.getElementById("listName").value || 'default';
            localStorage.setItem('list-' + listName, document.getElementById("wordList").value);
            localStorage.setItem('wordIndex-' + listName, wordIndex);
            alert("List saved as: " + listName);
            displaySavedLists();
        };

        const loadList = (listName) => {
            listName = listName || document.getElementById("listName").value || 'default';
            const savedList = localStorage.getItem('list-' + listName);
            if (savedList) {
                document.getElementById("wordList").value = savedList;
                wordIndex = parseInt(localStorage.getItem('wordIndex-' + listName)) || 0;
                alert("List loaded: " + listName);
            } else {
                alert("No list found with the name: " + listName);
            }
        };

        const deleteList = () => {
            const listName = document.getElementById("listName").value || 'default';
            if (localStorage.getItem('list-' + listName)) {
                localStorage.removeItem('list-' + listName);
                localStorage.removeItem('wordIndex-' + listName);
                alert("List deleted: " + listName);
                displaySavedLists();
            } else {
                alert("No list found with the name: " + listName);
            }
        };

        const resetCount = () => {
            wordIndex = 0;
            localStorage.setItem('wordIndex', wordIndex);
            alert("List count reset.");
        };

        const displaySavedLists = () => {
            const savedListsContainer = document.getElementById("savedLists");
            savedListsContainer.innerHTML = '';

            for (let i = 0; i < localStorage.length; i++) {
                const key = localStorage.key(i);
                if (key.startsWith("list-")) {
                    const listName = key.substring(5);
                    const listElement = document.createElement("span");
                    listElement.textContent = listName;
                    listElement.classList.add("bg-blue-500", "hover:bg-blue-600", "text-white", "py-2", "px-4", "rounded", "mr-2", "mt-2", "cursor-pointer");
                    listElement.onclick = () => loadList(listName);
                    savedListsContainer.appendChild(listElement);
                }
            }
        };

        displaySavedLists();
    </script>
</body>

</html>
